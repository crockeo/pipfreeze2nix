import textwrap
from tempfile import TemporaryDirectory
from pathlib import Path

import pytest
from packaging.requirements import Requirement

from pipfreeze2nix import pip_compile_parser


@pytest.fixture
def tmp_path():
    with TemporaryDirectory() as tmp_dir:
        yield Path(tmp_dir)


@pytest.fixture
def requirements_txt(tmp_path):
    (tmp_path / "requirements.txt").write_text(textwrap.dedent(
        """\
        #
        # This file is autogenerated by pip-compile with Python 3.10
        # by the following command:
        #
        #    pip-compile
        #
        --index-url https://artifactory.lyft.net/artifactory/api/pypi/virtual-pypi-lyft/simple/

        certifi==2022.12.7
            # via requests
        charset-normalizer==2.1.1
            # via requests
        idna==3.4
            # via requests
        packaging==22.0
            # via -r requirements.in
        requests==2.28.1
            # via -r requirements.in
        urllib3==1.26.13
            # via requests
        """
    ))
    return (tmp_path / "requirements.txt")


def test_segment_compiled_requirements(requirements_txt):
    lines = requirements_txt.read_text().splitlines()
    assert pip_compile_parser.segment_compiled_requirements(lines) == [
        [
            "certifi==2022.12.7",
            "via requests",
        ],
        [
            "charset-normalizer==2.1.1",
            "via requests",
        ],
        [
            "idna==3.4",
            "via requests",
        ],
        [
            "packaging==22.0",
            "via -r requirements.in",
        ],
        [
            "requests==2.28.1",
            "via -r requirements.in",
        ],
        [
            "urllib3==1.26.13",
            "via requests",
        ],
    ]


def test_parse_requirement_segment__one_dep():
    segment = [
        "urllib3==1.26.13",
        "via requests",
    ]
    assert pip_compile_parser.parse_segment(segment) == pip_compile_parser.InverseRequirementTree(
        req=Requirement("urllib3==1.26.13"),
        is_direct=False,
        depended_on_by={"requests"},
    )


def test_parse_requirement_segment__many_deps():
    segment = [
        "click==7.1.2",
        "via",
        "flask",
        "pip-tools",
    ]
    assert pip_compile_parser.parse_segment(segment) == pip_compile_parser.InverseRequirementTree(
        req=Requirement("click==7.1.2"),
        is_direct=False,
        depended_on_by={"flask", "pip-tools"},
    )


def test_parse_requirement_segment__direct():
    segment = [
        "packaging==22.0",
        "via -r requirements.in",
    ]
    assert pip_compile_parser.parse_segment(segment) == pip_compile_parser.InverseRequirementTree(
        req=Requirement("packaging==22.0"),
        is_direct=True,
        depended_on_by=set(),
    )


def test_parse_requirement_segment__direct_many_deps():
    segment = [
        "click==7.1.2",
        "via",
        "-r requirements.in",
        "flask",
        "pip-tools",
    ]
    assert pip_compile_parser.parse_segment(segment) == pip_compile_parser.InverseRequirementTree(
        req=Requirement("click==7.1.2"),
        is_direct=True,
        depended_on_by={"flask", "pip-tools"},
    )


def test_parse_compiled_requirements__simple(tmp_path):
    (tmp_path / "requirements.txt").write_text(textwrap.dedent(
        """\
        #
        # This file is autogenerated by pip-compile with Python 3.10
        # by the following command:
        #
        #    pip-compile
        #
        --index-url https://artifactory.lyft.net/artifactory/api/pypi/virtual-pypi-lyft/simple/

        certifi==2022.12.7
            # via requests
        charset-normalizer==2.1.1
            # via requests
        idna==3.4
            # via requests
        packaging==22.0
            # via -r requirements.in
        requests==2.28.1
            # via -r requirements.in
        urllib3==1.26.13
            # via requests
        """
    ))

    requirement_trees = pip_compile_parser.parse_compiled_requirements(tmp_path / "requirements.txt")
    assert requirement_trees == {
        "certifi": pip_compile_parser.RequirementTree(
            req=Requirement("certifi==2022.12.7"),
            is_direct=False,
            dependencies=set(),
        ),
        "charset-normalizer": pip_compile_parser.RequirementTree(
            req=Requirement("charset-normalizer==2.1.1"),
            is_direct=False,
            dependencies=set(),
        ),
        "idna": pip_compile_parser.RequirementTree(
            req=Requirement("idna==3.4"),
            is_direct=False,
            dependencies=set(),
        ),
        "packaging": pip_compile_parser.RequirementTree(
            req=Requirement("packaging==22.0"),
            is_direct=True,
            dependencies=set(),
        ),
        "requests": pip_compile_parser.RequirementTree(
            req=Requirement("requests==2.28.1"),
            is_direct=True,
            dependencies={"certifi", "charset-normalizer", "idna", "urllib3"},
        ),
        "urllib3": pip_compile_parser.RequirementTree(
            req=Requirement("urllib3==1.26.13"),
            is_direct=False,
            dependencies=set(),
        ),
    }
